datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String    @id @default(cuid())
  name      String?
  email     String    @unique
  password  String
  projects  Project[] @relation("UserProjects") // Relation to Project
  tasks     Task[]    @relation("UserTasks")    // Relation to Task
  accounts  Account[]
  sessions  Session[]
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  user               User    @relation(fields: [userId], references: [id])
  type               String
  provider           String
  providerAccountId  String
  access_token       String?
  refresh_token      String?
  expires_at         Int?
}

model Session {
  id           String  @id @default(cuid())
  userId       String
  user         User    @relation(fields: [userId], references: [id])
  expires      DateTime
  sessionToken String   @unique
}

model Project {
  id          String   @id @default(cuid())
  name        String
  description String?
  createdBy   String
  createdAt   DateTime @default(now())

  // Relations
  userId String  // Foreign key for User
  user   User    @relation("UserProjects", fields: [userId], references: [id])
  tasks  Task[]  @relation("ProjectTasks")
}

model Task {
  id          String   @id @default(cuid())
  title       String
  description String?
  deadline    DateTime
  priority    String
  status      String
  createdAt   DateTime @default(now())

  // Relations
  projectId String  // Foreign key for Project
  project   Project @relation("ProjectTasks", fields: [projectId], references: [id])

  assignedTo String // Foreign key for User
  user       User    @relation("UserTasks", fields: [assignedTo], references: [id])
}
